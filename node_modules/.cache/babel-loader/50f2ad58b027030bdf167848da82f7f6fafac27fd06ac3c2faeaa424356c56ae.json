{"ast":null,"code":"var _jsxFileName = \"/Users/dakota/Projects/react-tutorial/03-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport logo from './assets/investment-calculator-logo.png';\nimport Form from \"./components/Form\";\nimport Table from \"./components/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [formData, setFormData] = useState()\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = formData => {\n    const yearlyData = []; // per-year results\n\n    let savings = formData.currentSavings; // feel free to change the shape of this input object!\n    const expectedReturns = formData.expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < formData.duration; i++) {\n      const yearlyInterest = savings * expectedReturns;\n      savings += yearlyInterest + formData.yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        savingsEndOfYear: Math.round(savings * 100) / 100,\n        yearlyInterest: Math.round(yearlyInterest * 100) / 100,\n        yearlyContribution: formData.yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    setYearlyData(yearlyData);\n  };\n  const handleFormData = data => {\n    calculateHandler(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Investment Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onFormData: handleFormData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      yearlyData: yearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L2hTGYim4KbKSMBTHo5ostNJKu4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","logo","Form","Table","jsxDEV","_jsxDEV","App","_s","yearlyData","setYearlyData","calculateHandler","formData","savings","currentSavings","expectedReturns","expectedReturn","i","duration","yearlyInterest","yearlyContribution","push","year","savingsEndOfYear","Math","round","handleFormData","data","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFormData","_c","$RefreshReg$"],"sources":["/Users/dakota/Projects/react-tutorial/03-starting-project/src/App.js"],"sourcesContent":["import { useState } from \"react\"\nimport logo from './assets/investment-calculator-logo.png';\n\nimport Form from \"./components/Form\"\nimport Table from \"./components/Table\"\n\nfunction App() {\n  // const [formData, setFormData] = useState()\n  const [yearlyData, setYearlyData] = useState([])\n  \n  const calculateHandler = (formData) => {\n    const yearlyData = []; // per-year results\n\n    let savings = formData.currentSavings; // feel free to change the shape of this input object!\n    const expectedReturns = formData.expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < formData.duration; i++) {\n      const yearlyInterest = savings * expectedReturns;\n      savings += yearlyInterest + formData.yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        savingsEndOfYear: Math.round(savings * 100)/100,\n        yearlyInterest: Math.round(yearlyInterest*100)/100,\n        yearlyContribution: formData.yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n    setYearlyData(yearlyData)\n  };\n\n  const handleFormData = (data) => {\n    calculateHandler(data)\n  }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} alt=\"logo\" />\n        <h1>Investment Calculator</h1>\n      </header>\n\n      <Form onFormData={handleFormData} />\n      \n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n      <Table yearlyData={yearlyData} />\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yCAAyC;AAE1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMH,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAII,OAAO,GAAGD,QAAQ,CAACE,cAAc,CAAC,CAAC;IACvC,MAAMC,eAAe,GAAGH,QAAQ,CAACI,cAAc,GAAG,GAAG;;IAErD;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,QAAQ,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAME,cAAc,GAAGN,OAAO,GAAGE,eAAe;MAChDF,OAAO,IAAIM,cAAc,GAAGP,QAAQ,CAACQ,kBAAkB;MACvDX,UAAU,CAACY,IAAI,CAAC;QACd;QACAC,IAAI,EAAEL,CAAC,GAAG,CAAC;QACXM,gBAAgB,EAAEC,IAAI,CAACC,KAAK,CAACZ,OAAO,GAAG,GAAG,CAAC,GAAC,GAAG;QAC/CM,cAAc,EAAEK,IAAI,CAACC,KAAK,CAACN,cAAc,GAAC,GAAG,CAAC,GAAC,GAAG;QAClDC,kBAAkB,EAAER,QAAQ,CAACQ;MAC/B,CAAC,CAAC;IACJ;;IAEA;IACAV,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMiB,cAAc,GAAIC,IAAI,IAAK;IAC/BhB,gBAAgB,CAACgB,IAAI,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACxBtB,OAAA;QAAKwB,GAAG,EAAE5B,IAAK;QAAC6B,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B7B,OAAA;QAAAsB,QAAA,EAAI;MAAqB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAET7B,OAAA,CAACH,IAAI;MAACiC,UAAU,EAAEV;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAIpC7B,OAAA,CAACF,KAAK;MAACK,UAAU,EAAEA;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV;AAAC3B,EAAA,CA9CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}