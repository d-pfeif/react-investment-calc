{"ast":null,"code":"var _jsxFileName = \"/Users/dakota/Projects/react-tutorial/03-starting-project/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [currentSavings, setCurrentSavings] = useState(0);\n  const [yearlyContribution, setYearlyContribution] = useState(0);\n  const [expectedReturn, setExpectedReturn] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let savings = currentSavings; // feel free to change the shape of this input object!\n    const returns = expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * returns;\n      savings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    props.storeYearlyData(yearlyData);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!currentSavings || !yearlyContribution || !expectedReturn || !duration) {\n      return;\n    }\n    calculateHandler();\n  };\n  const formResetHandler = () => {\n    setCurrentSavings(0);\n    setYearlyContribution(0);\n    setExpectedReturn(0);\n    setDuration(0);\n    props.storeYearlyData([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onReset: formResetHandler,\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"current-savings\",\n          onChange: event => setCurrentSavings(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"yearly-contribution\",\n          onChange: event => setYearlyContribution(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"expected-return\",\n          onChange: event => setExpectedReturn(event.target.value / 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\",\n          onChange: event => setDuration(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"YdTNSmY/PCyL0ueepsgAstgZUeM=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Form","props","_s","currentSavings","setCurrentSavings","yearlyContribution","setYearlyContribution","expectedReturn","setExpectedReturn","duration","setDuration","calculateHandler","userInput","yearlyData","savings","returns","i","yearlyInterest","push","year","savingsEndOfYear","storeYearlyData","formSubmitHandler","event","preventDefault","formResetHandler","className","onReset","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/dakota/Projects/react-tutorial/03-starting-project/src/components/Form.js"],"sourcesContent":["import { useState } from \"react\"\n\nfunction Form(props) {\n  const [currentSavings, setCurrentSavings] = useState(0)\n  const [yearlyContribution, setYearlyContribution] = useState(0)\n  const [expectedReturn, setExpectedReturn] = useState(0)\n  const [duration, setDuration] = useState(0)\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let savings = currentSavings; // feel free to change the shape of this input object!\n    const returns = expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * returns;\n      savings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n    props.storeYearlyData(yearlyData)\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!currentSavings || !yearlyContribution || !expectedReturn || !duration) {\n      return\n    }\n    calculateHandler()\n  };\n  \n  const formResetHandler = () => {\n    setCurrentSavings(0)\n    setYearlyContribution(0)\n    setExpectedReturn(0)\n    setDuration(0)\n    props.storeYearlyData([])\n  };\n\n  return (\n    <form className=\"form\" onReset={formResetHandler} onSubmit={formSubmitHandler}>\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input type=\"number\" id=\"current-savings\" onChange={(event) => setCurrentSavings(event.target.value)} />\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input type=\"number\" id=\"yearly-contribution\" onChange={(event) => setYearlyContribution(event.target.value)} />\n        </p>\n      </div>\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input type=\"number\" id=\"expected-return\" onChange={(event) => setExpectedReturn(event.target.value / 100)} />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input type=\"number\" id=\"duration\" onChange={(event) => setDuration(event.target.value)} />\n        </p>\n      </div>\n      <p className=\"actions\">\n        <button type=\"reset\" className=\"buttonAlt\">\n          Reset\n        </button>\n        <button type=\"submit\" className=\"button\">\n          Calculate\n        </button>\n      </p>\n    </form>\n  );\n}\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}