{"ast":null,"code":"var _jsxFileName = \"/Users/dakota/Projects/react-tutorial/03-starting-project/src/components/Table.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TableRow from \"./TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  _s();\n  const [yearlyData, setYearlyData] = useState([]);\n  const calculateHandler = () => {\n    const yearlyData = []; // per-year results\n\n    let savings = props.formData.currentSavings; // feel free to change the shape of this input object!\n    const expectedReturns = props.formData.expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < props.formData.duration; i++) {\n      const yearlyInterest = savings * expectedReturns;\n      savings += yearlyInterest + props.formData.yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        savingsEndOfYear: savings,\n        yearlyInterest: yearlyInterest,\n        yearlyContribution: props.formData.yearlyContribution\n      });\n    }\n\n    // do something with yearlyData ...\n    setYearlyData(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: yearlyData.map(x => /*#__PURE__*/_jsxDEV(TableRow, {\n        year: x.year,\n        savingsEndOfYear: x.savingsEndOfYear,\n        yearlyInterest: x.yearlyInterest,\n        yearlyContribution: x.yearlyContribution\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"L2hTGYim4KbKSMBTHo5ostNJKu4=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useState","TableRow","jsxDEV","_jsxDEV","Table","props","_s","yearlyData","setYearlyData","calculateHandler","savings","formData","currentSavings","expectedReturns","expectedReturn","i","duration","yearlyInterest","yearlyContribution","push","year","savingsEndOfYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","x","_c","$RefreshReg$"],"sources":["/Users/dakota/Projects/react-tutorial/03-starting-project/src/components/Table.js"],"sourcesContent":["import { useState } from \"react\"\nimport TableRow from \"./TableRow\";\n\nfunction Table(props) {\n  const [yearlyData, setYearlyData] = useState([])\n  \n  const calculateHandler = () => {\n    const yearlyData = []; // per-year results\n\n    let savings = props.formData.currentSavings; // feel free to change the shape of this input object!\n    const expectedReturns = props.formData.expectedReturn / 100;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < props.formData.duration; i++) {\n      const yearlyInterest = savings * expectedReturns;\n      savings += yearlyInterest + props.formData.yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        savingsEndOfYear: savings,\n        yearlyInterest: yearlyInterest,\n        yearlyContribution: props.formData.yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n    setYearlyData(yearlyData)\n  };\n\n  return (\n    <table className=\"result\">\n      <thead>\n        <tr>\n          <th>Year</th>\n          <th>Total Savings</th>\n          <th>Interest (Year)</th>\n          <th>Total Interest</th>\n          <th>Invested Capital</th>\n        </tr>\n      </thead>\n      <tbody>\n        {yearlyData.map(x => <TableRow year={x.year} savingsEndOfYear={x.savingsEndOfYear} yearlyInterest={x.yearlyInterest} yearlyContribution={x.yearlyContribution} />)}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}